/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace Leap {

class LeapPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="SWIGRegisterExceptionCallbacks_Leap")]
    public static extern void SWIGRegisterExceptionCallbacks_Leap(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_Leap")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_Leap(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new global::System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new global::System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new global::System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new global::System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new global::System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new global::System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new global::System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new global::System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new global::System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new global::System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new global::System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new global::System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_Leap(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_Leap(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [global::System.ThreadStatic]
    private static global::System.Exception pendingException = null;
    private static int numExceptionsPending = 0;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(global::System.Exception e) {
      if (pendingException != null)
        throw new global::System.ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(typeof(LeapPINVOKE)) {
        numExceptionsPending++;
      }
    }

    public static global::System.Exception Retrieve() {
      global::System.Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(typeof(LeapPINVOKE)) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="SWIGRegisterStringCallback_Leap")]
    public static extern void SWIGRegisterStringCallback_Leap(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_Leap(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static LeapPINVOKE() {
  }


  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_ePSILON_get")]
  public static extern float ePSILON_get();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_Vector__SWIG_0")]
  public static extern global::System.IntPtr new_Vector__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_Vector__SWIG_1")]
  public static extern global::System.IntPtr new_Vector__SWIG_1(float jarg1, float jarg2, float jarg3);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_Vector__SWIG_2")]
  public static extern global::System.IntPtr new_Vector__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Vector_DistanceTo")]
  public static extern float Vector_DistanceTo(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Vector_AngleTo")]
  public static extern float Vector_AngleTo(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Vector_Dot")]
  public static extern float Vector_Dot(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Vector_Cross")]
  public static extern global::System.IntPtr Vector_Cross(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Vector__operator_sub__SWIG_0")]
  public static extern global::System.IntPtr Vector__operator_sub__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Vector__operator_add")]
  public static extern global::System.IntPtr Vector__operator_add(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Vector__operator_sub__SWIG_1")]
  public static extern global::System.IntPtr Vector__operator_sub__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Vector__operator_mul")]
  public static extern global::System.IntPtr Vector__operator_mul(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Vector__operator_div")]
  public static extern global::System.IntPtr Vector__operator_div(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Vector_ToString")]
  public static extern string Vector_ToString(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Vector_Equals")]
  public static extern bool Vector_Equals(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Vector_IsValid")]
  public static extern bool Vector_IsValid(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Vector__operator_get")]
  public static extern float Vector__operator_get(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Vector_x_set")]
  public static extern void Vector_x_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Vector_x_get")]
  public static extern float Vector_x_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Vector_y_set")]
  public static extern void Vector_y_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Vector_y_get")]
  public static extern float Vector_y_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Vector_z_set")]
  public static extern void Vector_z_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Vector_z_get")]
  public static extern float Vector_z_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Vector_Magnitude_get")]
  public static extern float Vector_Magnitude_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Vector_MagnitudeSquared_get")]
  public static extern float Vector_MagnitudeSquared_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Vector_Pitch_get")]
  public static extern float Vector_Pitch_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Vector_Roll_get")]
  public static extern float Vector_Roll_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Vector_Yaw_get")]
  public static extern float Vector_Yaw_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Vector_Normalized_get")]
  public static extern global::System.IntPtr Vector_Normalized_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Vector_Zero_get")]
  public static extern global::System.IntPtr Vector_Zero_get();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Vector_XAxis_get")]
  public static extern global::System.IntPtr Vector_XAxis_get();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Vector_YAxis_get")]
  public static extern global::System.IntPtr Vector_YAxis_get();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Vector_ZAxis_get")]
  public static extern global::System.IntPtr Vector_ZAxis_get();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Vector_Forward_get")]
  public static extern global::System.IntPtr Vector_Forward_get();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Vector_Backward_get")]
  public static extern global::System.IntPtr Vector_Backward_get();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Vector_Left_get")]
  public static extern global::System.IntPtr Vector_Left_get();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Vector_Right_get")]
  public static extern global::System.IntPtr Vector_Right_get();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Vector_Up_get")]
  public static extern global::System.IntPtr Vector_Up_get();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Vector_Down_get")]
  public static extern global::System.IntPtr Vector_Down_get();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_delete_Vector")]
  public static extern void delete_Vector(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_Matrix__SWIG_0")]
  public static extern global::System.IntPtr new_Matrix__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_Matrix__SWIG_1")]
  public static extern global::System.IntPtr new_Matrix__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_Matrix__SWIG_2")]
  public static extern global::System.IntPtr new_Matrix__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_Matrix__SWIG_3")]
  public static extern global::System.IntPtr new_Matrix__SWIG_3(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_Matrix__SWIG_4")]
  public static extern global::System.IntPtr new_Matrix__SWIG_4(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_Matrix__SWIG_5")]
  public static extern global::System.IntPtr new_Matrix__SWIG_5(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Matrix_SetRotation")]
  public static extern void Matrix_SetRotation(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, float jarg3);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Matrix_TransformPoint")]
  public static extern global::System.IntPtr Matrix_TransformPoint(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Matrix_TransformDirection")]
  public static extern global::System.IntPtr Matrix_TransformDirection(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Matrix_RigidInverse")]
  public static extern global::System.IntPtr Matrix_RigidInverse(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Matrix__operator_mul")]
  public static extern global::System.IntPtr Matrix__operator_mul(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Matrix_Equals")]
  public static extern bool Matrix_Equals(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Matrix_ToString")]
  public static extern string Matrix_ToString(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Matrix_xBasis_set")]
  public static extern void Matrix_xBasis_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Matrix_xBasis_get")]
  public static extern global::System.IntPtr Matrix_xBasis_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Matrix_yBasis_set")]
  public static extern void Matrix_yBasis_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Matrix_yBasis_get")]
  public static extern global::System.IntPtr Matrix_yBasis_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Matrix_zBasis_set")]
  public static extern void Matrix_zBasis_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Matrix_zBasis_get")]
  public static extern global::System.IntPtr Matrix_zBasis_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Matrix_origin_set")]
  public static extern void Matrix_origin_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Matrix_origin_get")]
  public static extern global::System.IntPtr Matrix_origin_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Matrix_Identity_get")]
  public static extern global::System.IntPtr Matrix_Identity_get();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_delete_Matrix")]
  public static extern void delete_Matrix(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_delete_Interface_Implementation")]
  public static extern void delete_Interface_Implementation(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_Interface_Implementation")]
  public static extern global::System.IntPtr new_Interface_Implementation();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_Pointable")]
  public static extern global::System.IntPtr new_Pointable();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Pointable_Equals")]
  public static extern bool Pointable_Equals(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Pointable_ToString")]
  public static extern string Pointable_ToString(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Pointable_Id_get")]
  public static extern int Pointable_Id_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Pointable_Hand_get")]
  public static extern global::System.IntPtr Pointable_Hand_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Pointable_TipPosition_get")]
  public static extern global::System.IntPtr Pointable_TipPosition_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Pointable_TipVelocity_get")]
  public static extern global::System.IntPtr Pointable_TipVelocity_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Pointable_Direction_get")]
  public static extern global::System.IntPtr Pointable_Direction_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Pointable_Width_get")]
  public static extern float Pointable_Width_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Pointable_Length_get")]
  public static extern float Pointable_Length_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Pointable_IsTool_get")]
  public static extern bool Pointable_IsTool_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Pointable_IsFinger_get")]
  public static extern bool Pointable_IsFinger_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Pointable_IsExtended_get")]
  public static extern bool Pointable_IsExtended_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Pointable_IsValid_get")]
  public static extern bool Pointable_IsValid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Pointable_TouchZone_get")]
  public static extern int Pointable_TouchZone_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Pointable_TouchDistance_get")]
  public static extern float Pointable_TouchDistance_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Pointable_StabilizedTipPosition_get")]
  public static extern global::System.IntPtr Pointable_StabilizedTipPosition_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Pointable_TimeVisible_get")]
  public static extern float Pointable_TimeVisible_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Pointable_Frame_get")]
  public static extern global::System.IntPtr Pointable_Frame_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Pointable_Invalid_get")]
  public static extern global::System.IntPtr Pointable_Invalid_get();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_delete_Pointable")]
  public static extern void delete_Pointable(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_Arm")]
  public static extern global::System.IntPtr new_Arm();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Arm_Equals")]
  public static extern bool Arm_Equals(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Arm_ToString")]
  public static extern string Arm_ToString(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Arm_Width_get")]
  public static extern float Arm_Width_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Arm_Center_get")]
  public static extern global::System.IntPtr Arm_Center_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Arm_Direction_get")]
  public static extern global::System.IntPtr Arm_Direction_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Arm_Basis_get")]
  public static extern global::System.IntPtr Arm_Basis_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Arm_ElbowPosition_get")]
  public static extern global::System.IntPtr Arm_ElbowPosition_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Arm_WristPosition_get")]
  public static extern global::System.IntPtr Arm_WristPosition_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Arm_IsValid_get")]
  public static extern bool Arm_IsValid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Arm_Invalid_get")]
  public static extern global::System.IntPtr Arm_Invalid_get();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_delete_Arm")]
  public static extern void delete_Arm(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_Bone")]
  public static extern global::System.IntPtr new_Bone();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Bone_Equals")]
  public static extern bool Bone_Equals(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Bone_ToString")]
  public static extern string Bone_ToString(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Bone_PrevJoint_get")]
  public static extern global::System.IntPtr Bone_PrevJoint_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Bone_NextJoint_get")]
  public static extern global::System.IntPtr Bone_NextJoint_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Bone_Center_get")]
  public static extern global::System.IntPtr Bone_Center_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Bone_Direction_get")]
  public static extern global::System.IntPtr Bone_Direction_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Bone_Length_get")]
  public static extern float Bone_Length_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Bone_Width_get")]
  public static extern float Bone_Width_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Bone_Type_get")]
  public static extern int Bone_Type_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Bone_Basis_get")]
  public static extern global::System.IntPtr Bone_Basis_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Bone_IsValid_get")]
  public static extern bool Bone_IsValid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Bone_Invalid_get")]
  public static extern global::System.IntPtr Bone_Invalid_get();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_delete_Bone")]
  public static extern void delete_Bone(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_Finger__SWIG_0")]
  public static extern global::System.IntPtr new_Finger__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_Finger__SWIG_1")]
  public static extern global::System.IntPtr new_Finger__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Finger_JointPosition")]
  public static extern global::System.IntPtr Finger_JointPosition(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Finger_Bone")]
  public static extern global::System.IntPtr Finger_Bone(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Finger_Type")]
  public static extern int Finger_Type(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Finger_ToString")]
  public static extern string Finger_ToString(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Finger_Invalid_get")]
  public static extern global::System.IntPtr Finger_Invalid_get();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_delete_Finger")]
  public static extern void delete_Finger(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_Tool__SWIG_0")]
  public static extern global::System.IntPtr new_Tool__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_Tool__SWIG_1")]
  public static extern global::System.IntPtr new_Tool__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Tool_ToString")]
  public static extern string Tool_ToString(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Tool_Invalid_get")]
  public static extern global::System.IntPtr Tool_Invalid_get();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_delete_Tool")]
  public static extern void delete_Tool(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_Hand")]
  public static extern global::System.IntPtr new_Hand();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_Pointable")]
  public static extern global::System.IntPtr Hand_Pointable(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_Finger")]
  public static extern global::System.IntPtr Hand_Finger(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_Tool")]
  public static extern global::System.IntPtr Hand_Tool(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_Translation")]
  public static extern global::System.IntPtr Hand_Translation(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_TranslationProbability")]
  public static extern float Hand_TranslationProbability(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_RotationAxis")]
  public static extern global::System.IntPtr Hand_RotationAxis(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_RotationAngle__SWIG_0")]
  public static extern float Hand_RotationAngle__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_RotationAngle__SWIG_1")]
  public static extern float Hand_RotationAngle__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_RotationMatrix")]
  public static extern global::System.IntPtr Hand_RotationMatrix(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_RotationProbability")]
  public static extern float Hand_RotationProbability(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_ScaleFactor")]
  public static extern float Hand_ScaleFactor(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_ScaleProbability")]
  public static extern float Hand_ScaleProbability(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_Equals")]
  public static extern bool Hand_Equals(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_ToString")]
  public static extern string Hand_ToString(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_Id_get")]
  public static extern int Hand_Id_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_Pointables_get")]
  public static extern global::System.IntPtr Hand_Pointables_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_Fingers_get")]
  public static extern global::System.IntPtr Hand_Fingers_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_Tools_get")]
  public static extern global::System.IntPtr Hand_Tools_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_PalmPosition_get")]
  public static extern global::System.IntPtr Hand_PalmPosition_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_PalmVelocity_get")]
  public static extern global::System.IntPtr Hand_PalmVelocity_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_PalmNormal_get")]
  public static extern global::System.IntPtr Hand_PalmNormal_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_Direction_get")]
  public static extern global::System.IntPtr Hand_Direction_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_Basis_get")]
  public static extern global::System.IntPtr Hand_Basis_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_IsValid_get")]
  public static extern bool Hand_IsValid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_SphereCenter_get")]
  public static extern global::System.IntPtr Hand_SphereCenter_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_SphereRadius_get")]
  public static extern float Hand_SphereRadius_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_GrabStrength_get")]
  public static extern float Hand_GrabStrength_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_PinchStrength_get")]
  public static extern float Hand_PinchStrength_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_PalmWidth_get")]
  public static extern float Hand_PalmWidth_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_StabilizedPalmPosition_get")]
  public static extern global::System.IntPtr Hand_StabilizedPalmPosition_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_WristPosition_get")]
  public static extern global::System.IntPtr Hand_WristPosition_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_TimeVisible_get")]
  public static extern float Hand_TimeVisible_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_Confidence_get")]
  public static extern float Hand_Confidence_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_IsLeft_get")]
  public static extern bool Hand_IsLeft_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_IsRight_get")]
  public static extern bool Hand_IsRight_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_Frame_get")]
  public static extern global::System.IntPtr Hand_Frame_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_Arm_get")]
  public static extern global::System.IntPtr Hand_Arm_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_Invalid_get")]
  public static extern global::System.IntPtr Hand_Invalid_get();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_delete_Hand")]
  public static extern void delete_Hand(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_Gesture__SWIG_0")]
  public static extern global::System.IntPtr new_Gesture__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_Gesture__SWIG_1")]
  public static extern global::System.IntPtr new_Gesture__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Gesture_Equals")]
  public static extern bool Gesture_Equals(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Gesture_ToString")]
  public static extern string Gesture_ToString(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Gesture_Type_get")]
  public static extern int Gesture_Type_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Gesture_State_get")]
  public static extern int Gesture_State_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Gesture_Id_get")]
  public static extern int Gesture_Id_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Gesture_Duration_get")]
  public static extern long Gesture_Duration_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Gesture_DurationSeconds_get")]
  public static extern float Gesture_DurationSeconds_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Gesture_Frame_get")]
  public static extern global::System.IntPtr Gesture_Frame_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Gesture_Hands_get")]
  public static extern global::System.IntPtr Gesture_Hands_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Gesture_Pointables_get")]
  public static extern global::System.IntPtr Gesture_Pointables_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Gesture_IsValid_get")]
  public static extern bool Gesture_IsValid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Gesture_Invalid_get")]
  public static extern global::System.IntPtr Gesture_Invalid_get();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_delete_Gesture")]
  public static extern void delete_Gesture(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_SwipeGesture_ClassType")]
  public static extern int SwipeGesture_ClassType();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_SwipeGesture__SWIG_0")]
  public static extern global::System.IntPtr new_SwipeGesture__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_SwipeGesture__SWIG_1")]
  public static extern global::System.IntPtr new_SwipeGesture__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_SwipeGesture_StartPosition_get")]
  public static extern global::System.IntPtr SwipeGesture_StartPosition_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_SwipeGesture_Position_get")]
  public static extern global::System.IntPtr SwipeGesture_Position_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_SwipeGesture_Direction_get")]
  public static extern global::System.IntPtr SwipeGesture_Direction_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_SwipeGesture_Speed_get")]
  public static extern float SwipeGesture_Speed_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_SwipeGesture_Pointable_get")]
  public static extern global::System.IntPtr SwipeGesture_Pointable_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_delete_SwipeGesture")]
  public static extern void delete_SwipeGesture(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_CircleGesture_ClassType")]
  public static extern int CircleGesture_ClassType();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_CircleGesture__SWIG_0")]
  public static extern global::System.IntPtr new_CircleGesture__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_CircleGesture__SWIG_1")]
  public static extern global::System.IntPtr new_CircleGesture__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_CircleGesture_Center_get")]
  public static extern global::System.IntPtr CircleGesture_Center_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_CircleGesture_Normal_get")]
  public static extern global::System.IntPtr CircleGesture_Normal_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_CircleGesture_Progress_get")]
  public static extern float CircleGesture_Progress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_CircleGesture_Radius_get")]
  public static extern float CircleGesture_Radius_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_CircleGesture_Pointable_get")]
  public static extern global::System.IntPtr CircleGesture_Pointable_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_delete_CircleGesture")]
  public static extern void delete_CircleGesture(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_ScreenTapGesture_ClassType")]
  public static extern int ScreenTapGesture_ClassType();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_ScreenTapGesture__SWIG_0")]
  public static extern global::System.IntPtr new_ScreenTapGesture__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_ScreenTapGesture__SWIG_1")]
  public static extern global::System.IntPtr new_ScreenTapGesture__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_ScreenTapGesture_Position_get")]
  public static extern global::System.IntPtr ScreenTapGesture_Position_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_ScreenTapGesture_Direction_get")]
  public static extern global::System.IntPtr ScreenTapGesture_Direction_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_ScreenTapGesture_Progress_get")]
  public static extern float ScreenTapGesture_Progress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_ScreenTapGesture_Pointable_get")]
  public static extern global::System.IntPtr ScreenTapGesture_Pointable_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_delete_ScreenTapGesture")]
  public static extern void delete_ScreenTapGesture(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_KeyTapGesture_ClassType")]
  public static extern int KeyTapGesture_ClassType();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_KeyTapGesture__SWIG_0")]
  public static extern global::System.IntPtr new_KeyTapGesture__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_KeyTapGesture__SWIG_1")]
  public static extern global::System.IntPtr new_KeyTapGesture__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_KeyTapGesture_Position_get")]
  public static extern global::System.IntPtr KeyTapGesture_Position_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_KeyTapGesture_Direction_get")]
  public static extern global::System.IntPtr KeyTapGesture_Direction_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_KeyTapGesture_Progress_get")]
  public static extern float KeyTapGesture_Progress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_KeyTapGesture_Pointable_get")]
  public static extern global::System.IntPtr KeyTapGesture_Pointable_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_delete_KeyTapGesture")]
  public static extern void delete_KeyTapGesture(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_Screen")]
  public static extern global::System.IntPtr new_Screen();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Screen_Intersect__SWIG_0")]
  public static extern global::System.IntPtr Screen_Intersect__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, bool jarg3, float jarg4);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Screen_Intersect__SWIG_1")]
  public static extern global::System.IntPtr Screen_Intersect__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, bool jarg3);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Screen_Intersect__SWIG_2")]
  public static extern global::System.IntPtr Screen_Intersect__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, bool jarg4, float jarg5);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Screen_Intersect__SWIG_3")]
  public static extern global::System.IntPtr Screen_Intersect__SWIG_3(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, bool jarg4);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Screen_Project__SWIG_0")]
  public static extern global::System.IntPtr Screen_Project__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, bool jarg3, float jarg4);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Screen_Project__SWIG_1")]
  public static extern global::System.IntPtr Screen_Project__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, bool jarg3);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Screen_Normal")]
  public static extern global::System.IntPtr Screen_Normal(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Screen_DistanceToPoint")]
  public static extern float Screen_DistanceToPoint(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Screen_Equals")]
  public static extern bool Screen_Equals(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Screen_ToString")]
  public static extern string Screen_ToString(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Screen_Id_get")]
  public static extern int Screen_Id_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Screen_HorizontalAxis_get")]
  public static extern global::System.IntPtr Screen_HorizontalAxis_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Screen_VerticalAxis_get")]
  public static extern global::System.IntPtr Screen_VerticalAxis_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Screen_BottomLeftCorner_get")]
  public static extern global::System.IntPtr Screen_BottomLeftCorner_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Screen_WidthPixels_get")]
  public static extern int Screen_WidthPixels_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Screen_HeightPixels_get")]
  public static extern int Screen_HeightPixels_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Screen_IsValid_get")]
  public static extern bool Screen_IsValid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Screen_Invalid_get")]
  public static extern global::System.IntPtr Screen_Invalid_get();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_delete_Screen")]
  public static extern void delete_Screen(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_Device")]
  public static extern global::System.IntPtr new_Device();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Device_DistanceToBoundary")]
  public static extern float Device_DistanceToBoundary(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Device_Equals")]
  public static extern bool Device_Equals(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Device_ToString")]
  public static extern string Device_ToString(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Device_HorizontalViewAngle_get")]
  public static extern float Device_HorizontalViewAngle_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Device_VerticalViewAngle_get")]
  public static extern float Device_VerticalViewAngle_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Device_Range_get")]
  public static extern float Device_Range_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Device_IsValid_get")]
  public static extern bool Device_IsValid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Device_IsEmbedded_get")]
  public static extern bool Device_IsEmbedded_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Device_IsStreaming_get")]
  public static extern bool Device_IsStreaming_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Device_IsFlipped_get")]
  public static extern bool Device_IsFlipped_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Device_Type_get")]
  public static extern int Device_Type_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Device_Invalid_get")]
  public static extern global::System.IntPtr Device_Invalid_get();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_delete_Device")]
  public static extern void delete_Device(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_Image")]
  public static extern global::System.IntPtr new_Image();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Image_DataWithArg")]
  public static extern void Image_DataWithArg(global::System.Runtime.InteropServices.HandleRef jarg1, [global::System.Runtime.InteropServices.In, global::System.Runtime.InteropServices.Out, global::System.Runtime.InteropServices.MarshalAs(global::System.Runtime.InteropServices.UnmanagedType.LPArray)]byte[] jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Image_DistortionWithArg")]
  public static extern void Image_DistortionWithArg(global::System.Runtime.InteropServices.HandleRef jarg1, [global::System.Runtime.InteropServices.Out, global::System.Runtime.InteropServices.MarshalAs(global::System.Runtime.InteropServices.UnmanagedType.LPArray)]float[] jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Image_Rectify")]
  public static extern global::System.IntPtr Image_Rectify(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Image_Warp")]
  public static extern global::System.IntPtr Image_Warp(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Image_Equals")]
  public static extern bool Image_Equals(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Image_ToString")]
  public static extern string Image_ToString(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Image_Id_get")]
  public static extern int Image_Id_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Image_Width_get")]
  public static extern int Image_Width_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Image_Height_get")]
  public static extern int Image_Height_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Image_DistortionWidth_get")]
  public static extern int Image_DistortionWidth_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Image_DistortionHeight_get")]
  public static extern int Image_DistortionHeight_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Image_RayOffsetX_get")]
  public static extern float Image_RayOffsetX_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Image_RayOffsetY_get")]
  public static extern float Image_RayOffsetY_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Image_RayScaleX_get")]
  public static extern float Image_RayScaleX_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Image_RayScaleY_get")]
  public static extern float Image_RayScaleY_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Image_IsValid_get")]
  public static extern bool Image_IsValid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Image_Invalid_get")]
  public static extern global::System.IntPtr Image_Invalid_get();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_delete_Image")]
  public static extern void delete_Image(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_PointableList")]
  public static extern global::System.IntPtr new_PointableList();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_PointableList__operator_get")]
  public static extern global::System.IntPtr PointableList__operator_get(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_PointableList_Append__SWIG_0")]
  public static extern global::System.IntPtr PointableList_Append__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_PointableList_Append__SWIG_1")]
  public static extern global::System.IntPtr PointableList_Append__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_PointableList_Append__SWIG_2")]
  public static extern global::System.IntPtr PointableList_Append__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_PointableList_Extended")]
  public static extern global::System.IntPtr PointableList_Extended(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_PointableList_Count_get")]
  public static extern int PointableList_Count_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_PointableList_IsEmpty_get")]
  public static extern bool PointableList_IsEmpty_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_PointableList_Leftmost_get")]
  public static extern global::System.IntPtr PointableList_Leftmost_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_PointableList_Rightmost_get")]
  public static extern global::System.IntPtr PointableList_Rightmost_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_PointableList_Frontmost_get")]
  public static extern global::System.IntPtr PointableList_Frontmost_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_delete_PointableList")]
  public static extern void delete_PointableList(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_FingerList")]
  public static extern global::System.IntPtr new_FingerList();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_FingerList__operator_get")]
  public static extern global::System.IntPtr FingerList__operator_get(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_FingerList_Append")]
  public static extern global::System.IntPtr FingerList_Append(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_FingerList_Extended")]
  public static extern global::System.IntPtr FingerList_Extended(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_FingerList_FingerType")]
  public static extern global::System.IntPtr FingerList_FingerType(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_FingerList_Count_get")]
  public static extern int FingerList_Count_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_FingerList_IsEmpty_get")]
  public static extern bool FingerList_IsEmpty_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_FingerList_Leftmost_get")]
  public static extern global::System.IntPtr FingerList_Leftmost_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_FingerList_Rightmost_get")]
  public static extern global::System.IntPtr FingerList_Rightmost_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_FingerList_Frontmost_get")]
  public static extern global::System.IntPtr FingerList_Frontmost_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_delete_FingerList")]
  public static extern void delete_FingerList(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_ToolList")]
  public static extern global::System.IntPtr new_ToolList();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_ToolList__operator_get")]
  public static extern global::System.IntPtr ToolList__operator_get(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_ToolList_Append")]
  public static extern global::System.IntPtr ToolList_Append(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_ToolList_Count_get")]
  public static extern int ToolList_Count_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_ToolList_IsEmpty_get")]
  public static extern bool ToolList_IsEmpty_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_ToolList_Leftmost_get")]
  public static extern global::System.IntPtr ToolList_Leftmost_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_ToolList_Rightmost_get")]
  public static extern global::System.IntPtr ToolList_Rightmost_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_ToolList_Frontmost_get")]
  public static extern global::System.IntPtr ToolList_Frontmost_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_delete_ToolList")]
  public static extern void delete_ToolList(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_HandList")]
  public static extern global::System.IntPtr new_HandList();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_HandList__operator_get")]
  public static extern global::System.IntPtr HandList__operator_get(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_HandList_Append")]
  public static extern global::System.IntPtr HandList_Append(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_HandList_Count_get")]
  public static extern int HandList_Count_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_HandList_IsEmpty_get")]
  public static extern bool HandList_IsEmpty_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_HandList_Leftmost_get")]
  public static extern global::System.IntPtr HandList_Leftmost_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_HandList_Rightmost_get")]
  public static extern global::System.IntPtr HandList_Rightmost_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_HandList_Frontmost_get")]
  public static extern global::System.IntPtr HandList_Frontmost_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_delete_HandList")]
  public static extern void delete_HandList(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_GestureList")]
  public static extern global::System.IntPtr new_GestureList();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_GestureList__operator_get")]
  public static extern global::System.IntPtr GestureList__operator_get(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_GestureList_Append")]
  public static extern global::System.IntPtr GestureList_Append(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_GestureList_Count_get")]
  public static extern int GestureList_Count_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_GestureList_IsEmpty_get")]
  public static extern bool GestureList_IsEmpty_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_delete_GestureList")]
  public static extern void delete_GestureList(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_ScreenList")]
  public static extern global::System.IntPtr new_ScreenList();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_ScreenList__operator_get")]
  public static extern global::System.IntPtr ScreenList__operator_get(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_ScreenList_ClosestScreenHit__SWIG_0")]
  public static extern global::System.IntPtr ScreenList_ClosestScreenHit__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_ScreenList_ClosestScreenHit__SWIG_1")]
  public static extern global::System.IntPtr ScreenList_ClosestScreenHit__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_ScreenList_ClosestScreen")]
  public static extern global::System.IntPtr ScreenList_ClosestScreen(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_ScreenList_Count_get")]
  public static extern int ScreenList_Count_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_ScreenList_IsEmpty_get")]
  public static extern bool ScreenList_IsEmpty_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_delete_ScreenList")]
  public static extern void delete_ScreenList(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_DeviceList")]
  public static extern global::System.IntPtr new_DeviceList();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_DeviceList__operator_get")]
  public static extern global::System.IntPtr DeviceList__operator_get(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_DeviceList_Append")]
  public static extern global::System.IntPtr DeviceList_Append(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_DeviceList_Count_get")]
  public static extern int DeviceList_Count_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_DeviceList_IsEmpty_get")]
  public static extern bool DeviceList_IsEmpty_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_delete_DeviceList")]
  public static extern void delete_DeviceList(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_ImageList")]
  public static extern global::System.IntPtr new_ImageList();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_ImageList__operator_get")]
  public static extern global::System.IntPtr ImageList__operator_get(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_ImageList_Append")]
  public static extern global::System.IntPtr ImageList_Append(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_ImageList_Count_get")]
  public static extern int ImageList_Count_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_ImageList_IsEmpty_get")]
  public static extern bool ImageList_IsEmpty_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_delete_ImageList")]
  public static extern void delete_ImageList(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_InteractionBox")]
  public static extern global::System.IntPtr new_InteractionBox();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_InteractionBox_NormalizePoint__SWIG_0")]
  public static extern global::System.IntPtr InteractionBox_NormalizePoint__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, bool jarg3);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_InteractionBox_NormalizePoint__SWIG_1")]
  public static extern global::System.IntPtr InteractionBox_NormalizePoint__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_InteractionBox_DenormalizePoint")]
  public static extern global::System.IntPtr InteractionBox_DenormalizePoint(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_InteractionBox_Equals")]
  public static extern bool InteractionBox_Equals(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_InteractionBox_ToString")]
  public static extern string InteractionBox_ToString(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_InteractionBox_Center_get")]
  public static extern global::System.IntPtr InteractionBox_Center_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_InteractionBox_Width_get")]
  public static extern float InteractionBox_Width_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_InteractionBox_Height_get")]
  public static extern float InteractionBox_Height_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_InteractionBox_Depth_get")]
  public static extern float InteractionBox_Depth_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_InteractionBox_IsValid_get")]
  public static extern bool InteractionBox_IsValid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_InteractionBox_Invalid_get")]
  public static extern global::System.IntPtr InteractionBox_Invalid_get();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_delete_InteractionBox")]
  public static extern void delete_InteractionBox(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_Frame")]
  public static extern global::System.IntPtr new_Frame();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Frame_Hand")]
  public static extern global::System.IntPtr Frame_Hand(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Frame_Pointable")]
  public static extern global::System.IntPtr Frame_Pointable(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Frame_Finger")]
  public static extern global::System.IntPtr Frame_Finger(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Frame_Tool")]
  public static extern global::System.IntPtr Frame_Tool(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Frame_Gesture")]
  public static extern global::System.IntPtr Frame_Gesture(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Frame_Gestures__SWIG_0")]
  public static extern global::System.IntPtr Frame_Gestures__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Frame_Gestures__SWIG_1")]
  public static extern global::System.IntPtr Frame_Gestures__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Frame_Translation")]
  public static extern global::System.IntPtr Frame_Translation(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Frame_TranslationProbability")]
  public static extern float Frame_TranslationProbability(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Frame_RotationAxis")]
  public static extern global::System.IntPtr Frame_RotationAxis(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Frame_RotationAngle__SWIG_0")]
  public static extern float Frame_RotationAngle__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Frame_RotationAngle__SWIG_1")]
  public static extern float Frame_RotationAngle__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Frame_RotationMatrix")]
  public static extern global::System.IntPtr Frame_RotationMatrix(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Frame_RotationProbability")]
  public static extern float Frame_RotationProbability(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Frame_ScaleFactor")]
  public static extern float Frame_ScaleFactor(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Frame_ScaleProbability")]
  public static extern float Frame_ScaleProbability(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Frame_Equals")]
  public static extern bool Frame_Equals(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Frame_SerializeWithArg")]
  public static extern void Frame_SerializeWithArg(global::System.Runtime.InteropServices.HandleRef jarg1, [global::System.Runtime.InteropServices.In, global::System.Runtime.InteropServices.Out, global::System.Runtime.InteropServices.MarshalAs(global::System.Runtime.InteropServices.UnmanagedType.LPArray)]byte[] jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Frame_DeserializeWithLength")]
  public static extern void Frame_DeserializeWithLength(global::System.Runtime.InteropServices.HandleRef jarg1, [global::System.Runtime.InteropServices.In, global::System.Runtime.InteropServices.Out, global::System.Runtime.InteropServices.MarshalAs(global::System.Runtime.InteropServices.UnmanagedType.LPArray)]byte[] jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Frame_ToString")]
  public static extern string Frame_ToString(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Frame_Id_get")]
  public static extern long Frame_Id_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Frame_Timestamp_get")]
  public static extern long Frame_Timestamp_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Frame_CurrentFramesPerSecond_get")]
  public static extern float Frame_CurrentFramesPerSecond_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Frame_Pointables_get")]
  public static extern global::System.IntPtr Frame_Pointables_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Frame_Fingers_get")]
  public static extern global::System.IntPtr Frame_Fingers_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Frame_Tools_get")]
  public static extern global::System.IntPtr Frame_Tools_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Frame_Hands_get")]
  public static extern global::System.IntPtr Frame_Hands_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Frame_Images_get")]
  public static extern global::System.IntPtr Frame_Images_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Frame_IsValid_get")]
  public static extern bool Frame_IsValid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Frame_InteractionBox_get")]
  public static extern global::System.IntPtr Frame_InteractionBox_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Frame_SerializeLength_get")]
  public static extern int Frame_SerializeLength_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Frame_Invalid_get")]
  public static extern global::System.IntPtr Frame_Invalid_get();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_delete_Frame")]
  public static extern void delete_Frame(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_Config")]
  public static extern global::System.IntPtr new_Config();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Config_Type")]
  public static extern int Config_Type(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Config_GetBool")]
  public static extern bool Config_GetBool(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Config_SetBool")]
  public static extern bool Config_SetBool(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, bool jarg3);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Config_GetInt32")]
  public static extern int Config_GetInt32(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Config_SetInt32")]
  public static extern bool Config_SetInt32(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Config_GetFloat")]
  public static extern float Config_GetFloat(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Config_SetFloat")]
  public static extern bool Config_SetFloat(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, float jarg3);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Config_GetString")]
  public static extern string Config_GetString(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Config_SetString")]
  public static extern bool Config_SetString(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Config_Save")]
  public static extern bool Config_Save(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_delete_Config")]
  public static extern void delete_Config(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_Controller__SWIG_0")]
  public static extern global::System.IntPtr new_Controller__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_delete_Controller")]
  public static extern void delete_Controller(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_Controller__SWIG_1")]
  public static extern global::System.IntPtr new_Controller__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Controller_IsServiceConnected")]
  public static extern bool Controller_IsServiceConnected(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Controller_SetPolicyFlags")]
  public static extern void Controller_SetPolicyFlags(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Controller_AddListener")]
  public static extern bool Controller_AddListener(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Controller_RemoveListener")]
  public static extern bool Controller_RemoveListener(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Controller_Frame__SWIG_0")]
  public static extern global::System.IntPtr Controller_Frame__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Controller_Frame__SWIG_1")]
  public static extern global::System.IntPtr Controller_Frame__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Controller_EnableGesture__SWIG_0")]
  public static extern void Controller_EnableGesture__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, bool jarg3);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Controller_EnableGesture__SWIG_1")]
  public static extern void Controller_EnableGesture__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Controller_IsGestureEnabled")]
  public static extern bool Controller_IsGestureEnabled(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Controller_IsConnected_get")]
  public static extern bool Controller_IsConnected_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Controller_HasFocus_get")]
  public static extern bool Controller_HasFocus_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Controller_PolicyFlags_get")]
  public static extern int Controller_PolicyFlags_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Controller_Config_get")]
  public static extern global::System.IntPtr Controller_Config_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Controller_LocatedScreens_get")]
  public static extern global::System.IntPtr Controller_LocatedScreens_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Controller_Devices_get")]
  public static extern global::System.IntPtr Controller_Devices_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_new_Listener")]
  public static extern global::System.IntPtr new_Listener();

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_delete_Listener")]
  public static extern void delete_Listener(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Listener_OnInit")]
  public static extern void Listener_OnInit(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Listener_OnInitSwigExplicitListener")]
  public static extern void Listener_OnInitSwigExplicitListener(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Listener_OnConnect")]
  public static extern void Listener_OnConnect(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Listener_OnConnectSwigExplicitListener")]
  public static extern void Listener_OnConnectSwigExplicitListener(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Listener_OnDisconnect")]
  public static extern void Listener_OnDisconnect(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Listener_OnDisconnectSwigExplicitListener")]
  public static extern void Listener_OnDisconnectSwigExplicitListener(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Listener_OnExit")]
  public static extern void Listener_OnExit(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Listener_OnExitSwigExplicitListener")]
  public static extern void Listener_OnExitSwigExplicitListener(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Listener_OnFrame")]
  public static extern void Listener_OnFrame(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Listener_OnFrameSwigExplicitListener")]
  public static extern void Listener_OnFrameSwigExplicitListener(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Listener_OnFocusGained")]
  public static extern void Listener_OnFocusGained(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Listener_OnFocusGainedSwigExplicitListener")]
  public static extern void Listener_OnFocusGainedSwigExplicitListener(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Listener_OnFocusLost")]
  public static extern void Listener_OnFocusLost(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Listener_OnFocusLostSwigExplicitListener")]
  public static extern void Listener_OnFocusLostSwigExplicitListener(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Listener_OnServiceConnect")]
  public static extern void Listener_OnServiceConnect(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Listener_OnServiceConnectSwigExplicitListener")]
  public static extern void Listener_OnServiceConnectSwigExplicitListener(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Listener_OnServiceDisconnect")]
  public static extern void Listener_OnServiceDisconnect(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Listener_OnServiceDisconnectSwigExplicitListener")]
  public static extern void Listener_OnServiceDisconnectSwigExplicitListener(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Listener_OnDeviceChange")]
  public static extern void Listener_OnDeviceChange(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Listener_OnDeviceChangeSwigExplicitListener")]
  public static extern void Listener_OnDeviceChangeSwigExplicitListener(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Listener_director_connect")]
  public static extern void Listener_director_connect(global::System.Runtime.InteropServices.HandleRef jarg1, Listener.SwigDelegateListener_0 delegate0, Listener.SwigDelegateListener_1 delegate1, Listener.SwigDelegateListener_2 delegate2, Listener.SwigDelegateListener_3 delegate3, Listener.SwigDelegateListener_4 delegate4, Listener.SwigDelegateListener_5 delegate5, Listener.SwigDelegateListener_6 delegate6, Listener.SwigDelegateListener_7 delegate7, Listener.SwigDelegateListener_8 delegate8, Listener.SwigDelegateListener_9 delegate9);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Pointable_SWIGUpcast")]
  public static extern global::System.IntPtr Pointable_SWIGUpcast(global::System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Arm_SWIGUpcast")]
  public static extern global::System.IntPtr Arm_SWIGUpcast(global::System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Bone_SWIGUpcast")]
  public static extern global::System.IntPtr Bone_SWIGUpcast(global::System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Finger_SWIGUpcast")]
  public static extern global::System.IntPtr Finger_SWIGUpcast(global::System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Tool_SWIGUpcast")]
  public static extern global::System.IntPtr Tool_SWIGUpcast(global::System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Hand_SWIGUpcast")]
  public static extern global::System.IntPtr Hand_SWIGUpcast(global::System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Gesture_SWIGUpcast")]
  public static extern global::System.IntPtr Gesture_SWIGUpcast(global::System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_SwipeGesture_SWIGUpcast")]
  public static extern global::System.IntPtr SwipeGesture_SWIGUpcast(global::System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_CircleGesture_SWIGUpcast")]
  public static extern global::System.IntPtr CircleGesture_SWIGUpcast(global::System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_ScreenTapGesture_SWIGUpcast")]
  public static extern global::System.IntPtr ScreenTapGesture_SWIGUpcast(global::System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_KeyTapGesture_SWIGUpcast")]
  public static extern global::System.IntPtr KeyTapGesture_SWIGUpcast(global::System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Screen_SWIGUpcast")]
  public static extern global::System.IntPtr Screen_SWIGUpcast(global::System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Device_SWIGUpcast")]
  public static extern global::System.IntPtr Device_SWIGUpcast(global::System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Image_SWIGUpcast")]
  public static extern global::System.IntPtr Image_SWIGUpcast(global::System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_PointableList_SWIGUpcast")]
  public static extern global::System.IntPtr PointableList_SWIGUpcast(global::System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_FingerList_SWIGUpcast")]
  public static extern global::System.IntPtr FingerList_SWIGUpcast(global::System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_ToolList_SWIGUpcast")]
  public static extern global::System.IntPtr ToolList_SWIGUpcast(global::System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_HandList_SWIGUpcast")]
  public static extern global::System.IntPtr HandList_SWIGUpcast(global::System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_GestureList_SWIGUpcast")]
  public static extern global::System.IntPtr GestureList_SWIGUpcast(global::System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_ScreenList_SWIGUpcast")]
  public static extern global::System.IntPtr ScreenList_SWIGUpcast(global::System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_DeviceList_SWIGUpcast")]
  public static extern global::System.IntPtr DeviceList_SWIGUpcast(global::System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_ImageList_SWIGUpcast")]
  public static extern global::System.IntPtr ImageList_SWIGUpcast(global::System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_InteractionBox_SWIGUpcast")]
  public static extern global::System.IntPtr InteractionBox_SWIGUpcast(global::System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Frame_SWIGUpcast")]
  public static extern global::System.IntPtr Frame_SWIGUpcast(global::System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Config_SWIGUpcast")]
  public static extern global::System.IntPtr Config_SWIGUpcast(global::System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("LeapCSharp", EntryPoint="CSharp_Controller_SWIGUpcast")]
  public static extern global::System.IntPtr Controller_SWIGUpcast(global::System.IntPtr jarg1);
}

}
